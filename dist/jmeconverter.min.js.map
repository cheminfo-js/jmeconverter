{"version":3,"sources":["webpack:///jmeconverter/webpack/universalModuleDefinition","webpack:///jmeconverter/jmeconverter.min.js","webpack:///jmeconverter/webpack/bootstrap eb09843e69118ec380f7","webpack:///jmeconverter/./src/index.js","webpack:///jmeconverter/./src/molfileToJme.js","webpack:///jmeconverter/./src/nominalMass.js","webpack:///jmeconverter/./src/jmeToMolfile.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","molfileToJme","jmeToMolfile","molfile","newLabels","lines","split","jme","atoms","parseInt","substr","bonds","push","i","newAtom","line","x","parseFloat","toFixed","y","atom","trim","massDifference","charge","Array","isArray","getJmeAtom","from","to","bond","bondType","join","nominalMass","Cs","Cu","Kr","Cl","Co","Cr","Li","Cd","Ce","La","Lu","Tm","Ti","Te","Dy","Ta","Mg","Tc","Tb","F","Fe","B","C","N","O","H","Eu","Mo","I","Mn","K","Er","W","V","Ni","P","S","Nd","Ne","Nb","Y","Na","Ge","Gd","Ga","Yb","Pt","Pr","Hf","He","Pd","Ho","Pm","Xe","Os","Se","Au","Sc","In","Ar","Si","As","Sn","Sm","Ba","Sr","Ir","Ru","Ag","Sb","Al","Rb","Re","Rh","Br","Ca","Be","Zn","Zr","molecules","atomsNb","bondsNb","allFields","length","molecule","fields","substring","currentShift","position","jmeToAtom","type","jmeToBond","concat","numberToString10","number","oneNumber","posPoint","indexOf","numberSpace","number0","result","jmeAtomToMolfileLine","fullAtom","isotope","replace","mass","match"],"mappings":"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","file":"jmeconverter.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jmeconverter\"] = factory();\n\telse\n\t\troot[\"jmeconverter\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jmeconverter\"] = factory();\n\telse\n\t\troot[\"jmeconverter\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.molfileToJme = __webpack_require__(1);\n\texports.jmeToMolfile = __webpack_require__(3);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar nominalMass = __webpack_require__(2);\n\t\n\tmodule.exports = molfileToJme;\n\t\n\tfunction molfileToJme(molfile, newLabels) {\n\t    var lines = (molfile + '').split(/\\n/);\n\t    var jme = [];\n\t    var atoms = parseInt(lines[3].substr(0, 3));\n\t    var bonds = parseInt(lines[3].substr(3, 3));\n\t    jme.push(atoms);\n\t    jme.push(bonds);\n\t    for (var i = 4; i < (atoms + 4); i++) {\n\t\n\t        var line = lines[i];\n\t        var x = parseFloat(line.substr(0, 10)).toFixed(2);\n\t        var y = parseFloat(line.substr(10, 10)).toFixed(2);\n\t        var atom = line.substr(31, 3).trim();\n\t        var massDifference = parseInt(line.substr(34, 2).trim());\n\t        var charge = parseInt(line.substr(36, 3).trim());\n\t        var valence = parseInt(line.substr(48, 3).trim());\n\t        var newAtom;\n\t\n\t        if (Array.isArray(newLabels) && newLabels[i - 4]) {\n\t            newAtom = newLabels[i - 4];\n\t        } else {\n\t            newAtom = getJmeAtom(atom, massDifference, charge);\n\t        }\n\t\n\t        jme.push(newAtom, x, y);\n\t    }\n\t    for (var i = atoms + 4; i < (atoms + bonds + 4); i++) {\n\t        var line = lines[i];\n\t        var from = parseInt(line.substr(0, 3));\n\t        var to = parseInt(line.substr(3, 3));\n\t        var bond = parseInt(line.substr(6, 3));\n\t        var bondType = parseInt(line.substr(9, 3));\n\t        if (bondType == 1)\n\t            bond = -1;\n\t        if (bondType == 6)\n\t            bond = -2;\n\t        jme.push(from, to, bond);\n\t    }\n\t\n\t    return jme.join(' ');\n\t}\n\t\n\t// molfile description: http://c4.cabrillo.edu/404/ctfile.pdf\n\tfunction getJmeAtom(atom, massDifference, charge) {\n\t    var newAtom = '';\n\t    if (massDifference != 0) {\n\t        newAtom += (nominalMass[atom] + massDifference);\n\t    }\n\t    newAtom += atom;\n\t    switch (charge) {\n\t        case 1:\n\t            newAtom += '+3';\n\t            break;\n\t        case 2:\n\t            newAtom += '++';\n\t            break;\n\t        case 3:\n\t            newAtom += '+';\n\t            break;\n\t        case 5:\n\t            newAtom += '-';\n\t            break;\n\t        case 6:\n\t            newAtom += '--';\n\t            break;\n\t        case 7:\n\t            newAtom += '-3';\n\t            break;\n\t    }\n\t    return newAtom;\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t    Cs: 133,\n\t    Cu: 64,\n\t    Kr: 84,\n\t    Cl: 35,\n\t    Co: 59,\n\t    Cr: 52,\n\t    Li: 7,\n\t    Cd: 112,\n\t    Ce: 140,\n\t    La: 139,\n\t    Lu: 175,\n\t    Tm: 169,\n\t    Ti: 48,\n\t    Te: 128,\n\t    Dy: 162,\n\t    Ta: 181,\n\t    Mg: 24,\n\t    Tc: 98,\n\t    Tb: 159,\n\t    F: 19,\n\t    Fe: 56,\n\t    B: 11,\n\t    C: 12,\n\t    N: 14,\n\t    O: 16,\n\t    H: 1,\n\t    Eu: 152,\n\t    Mo: 96,\n\t    I: 127,\n\t    Mn: 55,\n\t    K: 39,\n\t    Er: 167,\n\t    W: 184,\n\t    V: 51,\n\t    Ni: 59,\n\t    P: 31,\n\t    S: 32,\n\t    Nd: 144,\n\t    Ne: 20,\n\t    Nb: 93,\n\t    Y: 89,\n\t    Na: 23,\n\t    Ge: 73,\n\t    Gd: 157,\n\t    Ga: 70,\n\t    Yb: 173,\n\t    Pt: 195,\n\t    Pr: 141,\n\t    Hf: 178,\n\t    He: 4,\n\t    Pd: 106,\n\t    Ho: 165,\n\t    Pm: 145,\n\t    Xe: 131,\n\t    Os: 190,\n\t    Se: 79,\n\t    Au: 197,\n\t    Sc: 45,\n\t    In: 115,\n\t    Ar: 40,\n\t    Si: 28,\n\t    As: 75,\n\t    Sn: 119,\n\t    Sm: 150,\n\t    Ba: 137,\n\t    Sr: 88,\n\t    Ir: 192,\n\t    Ru: 101,\n\t    Ag: 108,\n\t    Sb: 122,\n\t    Al: 27,\n\t    Rb: 85,\n\t    Re: 186,\n\t    Rh: 103,\n\t    Br: 80,\n\t    Ca: 40,\n\t    Be: 9,\n\t    Zn: 65,\n\t    Zr: 91\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar nominalMass = __webpack_require__(2);\n\t\n\tmodule.exports = jmeToMolfile;\n\t\n\tfunction jmeToMolfile(jme) {\n\t    var molfile = [];\n\t    molfile.push('line 1');\n\t    molfile.push('');\n\t    molfile.push('line 3');\n\t\n\t    var molecules = jme.split('|');\n\t    var atomsNb = 0;\n\t    var bondsNb = 0;\n\t    var allFields = [];\n\t    for (var i = 0; i < molecules.length; i++) {\n\t        var molecule = molecules[i];\n\t        var fields = molecule.split(/[ \\r\\n\\t]+/);\n\t        if (fields.length < 2)\n\t            return;\n\t        atomsNb += parseInt(fields[0]);\n\t        bondsNb += parseInt(fields[1]);\n\t        allFields.push(fields);\n\t    }\n\t\n\t    atomsNb += '';\n\t    bondsNb += '';\n\t\n\t    molfile.push('   '.substring(0, 3 - atomsNb.length) + atomsNb + '   '.substring(0, 3 - bondsNb.length) + bondsNb + '  0  0  0  0  0  0  0  0999 V2000');\n\t\n\t    var currentShift = 0;\n\t    var atoms = [];\n\t    var bonds = [];\n\t    for (var i = 0; i < molecules.length; i++) {\n\t        var fields = allFields[i];\n\t        var atomsNb = parseInt(fields[0]);\n\t        var bondsNb = parseInt(fields[1]);\n\t        var position = 2;\n\t        while (atomsNb > 0) {\n\t            atomsNb--;\n\t            var atom = fields[position++];\n\t            var x = fields[position++];\n\t            var y = fields[position++];\n\t            atoms.push(jmeToAtom(atom, x, y));\n\t        }\n\t        while (bondsNb > 0) {\n\t            bondsNb--;\n\t            var from = fields[position++] * 1;\n\t            var to = fields[position++] * 1;\n\t            var type = fields[position++];\n\t            bonds.push(jmeToBond(from + currentShift, to + currentShift, type));\n\t        }\n\t        currentShift += parseInt(fields[0]);\n\t    }\n\t    molfile = molfile.concat(atoms);\n\t    molfile = molfile.concat(bonds);\n\t    molfile.push('M  END');\n\t    return molfile.join('\\n');\n\t}\n\t\n\tfunction numberToString10(number) {\n\t    var oneNumber = number + '';\n\t    var posPoint = oneNumber.indexOf('.');\n\t    var numberSpace = 5 - posPoint;\n\t    var number0 = 5 - (oneNumber.length - posPoint);\n\t    var result = '     '.substring(0, numberSpace) + oneNumber + '0000'.substring(0, number0);\n\t    return result;\n\t}\n\t\n\tfunction jmeToAtom(atom, x, y) {\n\t    var line = '';\n\t    line += numberToString10(x);\n\t    line += numberToString10(y);\n\t    line += '    0.0000 ';\n\t    line += jmeAtomToMolfileLine(atom);\n\t    return line;\n\t}\n\t\n\tfunction jmeAtomToMolfileLine(fullAtom) {\n\t    var result = '';\n\t    var isotope = fullAtom.replace(/^([0-9]*)([^-+]+)(.*)/, '$1');\n\t    var atom = fullAtom.replace(/^([0-9]*)([^-+]+)(.*)/, '$2');\n\t    var charge = fullAtom.replace(/^([0-9]*)([^-+]+)(.*)/, '$3');\n\t    result += atom + '   '.substring(atom.length, 3);\n\t    if (isotope) {\n\t        var mass = (isotope * 1 - (nominalMass[atom])) + '';\n\t        result += '  '.substring(mass.length, 2) + mass; // mass difference\n\t    } else {\n\t        result += ' 0';\n\t    }\n\t    if (charge) {\n\t        if (charge.match(/^\\+*$/)) {\n\t            charge = charge.length;\n\t        } else if (charge.match(/^\\-*$/)) {\n\t            charge = -charge.length;\n\t        } else\n\t            charge = parseInt(charge);\n\t        switch (charge) {\n\t            case 1:\n\t                result += '  3';\n\t                break;\n\t            case 2:\n\t                result += '  2';\n\t                break;\n\t            case 3:\n\t                result += '  1';\n\t                break;\n\t            case -1:\n\t                result += '  5';\n\t                break;\n\t            case -2:\n\t                result += '  6';\n\t                break;\n\t            case -3:\n\t                result += '  7';\n\t                break;\n\t        }\n\t\n\t    } else {\n\t        result += '  0';\n\t    }\n\t    result += '  0  0  0  0  0  0  0  0  0  0';\n\t    return result;\n\t}\n\t\n\tfunction jmeToBond(from, to, type) {\n\t    from += '';\n\t    to += '';\n\t    type = parseInt(type);\n\t    var line = '   '.substring(from.length, 3) + from + '   '.substring(to.length, 3) + to;\n\t    switch (type) {\n\t        case -1:\n\t            line += '  1  1';\n\t            break;\n\t        case -2:\n\t            line += '  1  6';\n\t            break;\n\t        default:\n\t            line += '  ' + type + '  0';\n\t    }\n\t    return line;\n\t}\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** jmeconverter.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap eb09843e69118ec380f7\n **/","'use strict';\n\nexports.molfileToJme = require('./molfileToJme');\nexports.jmeToMolfile = require('./jmeToMolfile');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\n\nvar nominalMass = require('./nominalMass');\n\nmodule.exports = molfileToJme;\n\nfunction molfileToJme(molfile, newLabels) {\n    var lines = (molfile + '').split(/\\n/);\n    var jme = [];\n    var atoms = parseInt(lines[3].substr(0, 3));\n    var bonds = parseInt(lines[3].substr(3, 3));\n    jme.push(atoms);\n    jme.push(bonds);\n    for (var i = 4; i < (atoms + 4); i++) {\n\n        var line = lines[i];\n        var x = parseFloat(line.substr(0, 10)).toFixed(2);\n        var y = parseFloat(line.substr(10, 10)).toFixed(2);\n        var atom = line.substr(31, 3).trim();\n        var massDifference = parseInt(line.substr(34, 2).trim());\n        var charge = parseInt(line.substr(36, 3).trim());\n        var valence = parseInt(line.substr(48, 3).trim());\n        var newAtom;\n\n        if (Array.isArray(newLabels) && newLabels[i - 4]) {\n            newAtom = newLabels[i - 4];\n        } else {\n            newAtom = getJmeAtom(atom, massDifference, charge);\n        }\n\n        jme.push(newAtom, x, y);\n    }\n    for (var i = atoms + 4; i < (atoms + bonds + 4); i++) {\n        var line = lines[i];\n        var from = parseInt(line.substr(0, 3));\n        var to = parseInt(line.substr(3, 3));\n        var bond = parseInt(line.substr(6, 3));\n        var bondType = parseInt(line.substr(9, 3));\n        if (bondType == 1)\n            bond = -1;\n        if (bondType == 6)\n            bond = -2;\n        jme.push(from, to, bond);\n    }\n\n    return jme.join(' ');\n}\n\n// molfile description: http://c4.cabrillo.edu/404/ctfile.pdf\nfunction getJmeAtom(atom, massDifference, charge) {\n    var newAtom = '';\n    if (massDifference != 0) {\n        newAtom += (nominalMass[atom] + massDifference);\n    }\n    newAtom += atom;\n    switch (charge) {\n        case 1:\n            newAtom += '+3';\n            break;\n        case 2:\n            newAtom += '++';\n            break;\n        case 3:\n            newAtom += '+';\n            break;\n        case 5:\n            newAtom += '-';\n            break;\n        case 6:\n            newAtom += '--';\n            break;\n        case 7:\n            newAtom += '-3';\n            break;\n    }\n    return newAtom;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/molfileToJme.js\n ** module id = 1\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = {\n    Cs: 133,\n    Cu: 64,\n    Kr: 84,\n    Cl: 35,\n    Co: 59,\n    Cr: 52,\n    Li: 7,\n    Cd: 112,\n    Ce: 140,\n    La: 139,\n    Lu: 175,\n    Tm: 169,\n    Ti: 48,\n    Te: 128,\n    Dy: 162,\n    Ta: 181,\n    Mg: 24,\n    Tc: 98,\n    Tb: 159,\n    F: 19,\n    Fe: 56,\n    B: 11,\n    C: 12,\n    N: 14,\n    O: 16,\n    H: 1,\n    Eu: 152,\n    Mo: 96,\n    I: 127,\n    Mn: 55,\n    K: 39,\n    Er: 167,\n    W: 184,\n    V: 51,\n    Ni: 59,\n    P: 31,\n    S: 32,\n    Nd: 144,\n    Ne: 20,\n    Nb: 93,\n    Y: 89,\n    Na: 23,\n    Ge: 73,\n    Gd: 157,\n    Ga: 70,\n    Yb: 173,\n    Pt: 195,\n    Pr: 141,\n    Hf: 178,\n    He: 4,\n    Pd: 106,\n    Ho: 165,\n    Pm: 145,\n    Xe: 131,\n    Os: 190,\n    Se: 79,\n    Au: 197,\n    Sc: 45,\n    In: 115,\n    Ar: 40,\n    Si: 28,\n    As: 75,\n    Sn: 119,\n    Sm: 150,\n    Ba: 137,\n    Sr: 88,\n    Ir: 192,\n    Ru: 101,\n    Ag: 108,\n    Sb: 122,\n    Al: 27,\n    Rb: 85,\n    Re: 186,\n    Rh: 103,\n    Br: 80,\n    Ca: 40,\n    Be: 9,\n    Zn: 65,\n    Zr: 91\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/nominalMass.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nvar nominalMass = require('./nominalMass');\n\nmodule.exports = jmeToMolfile;\n\nfunction jmeToMolfile(jme) {\n    var molfile = [];\n    molfile.push('line 1');\n    molfile.push('');\n    molfile.push('line 3');\n\n    var molecules = jme.split('|');\n    var atomsNb = 0;\n    var bondsNb = 0;\n    var allFields = [];\n    for (var i = 0; i < molecules.length; i++) {\n        var molecule = molecules[i];\n        var fields = molecule.split(/[ \\r\\n\\t]+/);\n        if (fields.length < 2)\n            return;\n        atomsNb += parseInt(fields[0]);\n        bondsNb += parseInt(fields[1]);\n        allFields.push(fields);\n    }\n\n    atomsNb += '';\n    bondsNb += '';\n\n    molfile.push('   '.substring(0, 3 - atomsNb.length) + atomsNb + '   '.substring(0, 3 - bondsNb.length) + bondsNb + '  0  0  0  0  0  0  0  0999 V2000');\n\n    var currentShift = 0;\n    var atoms = [];\n    var bonds = [];\n    for (var i = 0; i < molecules.length; i++) {\n        var fields = allFields[i];\n        var atomsNb = parseInt(fields[0]);\n        var bondsNb = parseInt(fields[1]);\n        var position = 2;\n        while (atomsNb > 0) {\n            atomsNb--;\n            var atom = fields[position++];\n            var x = fields[position++];\n            var y = fields[position++];\n            atoms.push(jmeToAtom(atom, x, y));\n        }\n        while (bondsNb > 0) {\n            bondsNb--;\n            var from = fields[position++] * 1;\n            var to = fields[position++] * 1;\n            var type = fields[position++];\n            bonds.push(jmeToBond(from + currentShift, to + currentShift, type));\n        }\n        currentShift += parseInt(fields[0]);\n    }\n    molfile = molfile.concat(atoms);\n    molfile = molfile.concat(bonds);\n    molfile.push('M  END');\n    return molfile.join('\\n');\n}\n\nfunction numberToString10(number) {\n    var oneNumber = number + '';\n    var posPoint = oneNumber.indexOf('.');\n    var numberSpace = 5 - posPoint;\n    var number0 = 5 - (oneNumber.length - posPoint);\n    var result = '     '.substring(0, numberSpace) + oneNumber + '0000'.substring(0, number0);\n    return result;\n}\n\nfunction jmeToAtom(atom, x, y) {\n    var line = '';\n    line += numberToString10(x);\n    line += numberToString10(y);\n    line += '    0.0000 ';\n    line += jmeAtomToMolfileLine(atom);\n    return line;\n}\n\nfunction jmeAtomToMolfileLine(fullAtom) {\n    var result = '';\n    var isotope = fullAtom.replace(/^([0-9]*)([^-+]+)(.*)/, '$1');\n    var atom = fullAtom.replace(/^([0-9]*)([^-+]+)(.*)/, '$2');\n    var charge = fullAtom.replace(/^([0-9]*)([^-+]+)(.*)/, '$3');\n    result += atom + '   '.substring(atom.length, 3);\n    if (isotope) {\n        var mass = (isotope * 1 - (nominalMass[atom])) + '';\n        result += '  '.substring(mass.length, 2) + mass; // mass difference\n    } else {\n        result += ' 0';\n    }\n    if (charge) {\n        if (charge.match(/^\\+*$/)) {\n            charge = charge.length;\n        } else if (charge.match(/^\\-*$/)) {\n            charge = -charge.length;\n        } else\n            charge = parseInt(charge);\n        switch (charge) {\n            case 1:\n                result += '  3';\n                break;\n            case 2:\n                result += '  2';\n                break;\n            case 3:\n                result += '  1';\n                break;\n            case -1:\n                result += '  5';\n                break;\n            case -2:\n                result += '  6';\n                break;\n            case -3:\n                result += '  7';\n                break;\n        }\n\n    } else {\n        result += '  0';\n    }\n    result += '  0  0  0  0  0  0  0  0  0  0';\n    return result;\n}\n\nfunction jmeToBond(from, to, type) {\n    from += '';\n    to += '';\n    type = parseInt(type);\n    var line = '   '.substring(from.length, 3) + from + '   '.substring(to.length, 3) + to;\n    switch (type) {\n        case -1:\n            line += '  1  1';\n            break;\n        case -2:\n            line += '  1  6';\n            break;\n        default:\n            line += '  ' + type + '  0';\n    }\n    return line;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/jmeToMolfile.js\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}